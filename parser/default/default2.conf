# https://docs.nginx.com/nginx/admin-guide/web-server/web-server/
# HTTP methodes
# GET POST DELETE

# Possible multiple occurrence of paramaters in both server and location contexts
# client_max_body_size, autoindex, index, cgi_extension, upload, root, error_page, return

# If a port is omitted, the standard port is used.
# Likewise, if an address is omitted, the server listens on all addresses.
# If the listen directive is not included at all, the “standard” port is 80/tcp and
#  the “default” port is 8000/tcp, depending on superuser privileges.

# To find the location that best matches a URI, NGINX Plus first compares the URI to the locations with a prefix string.
# 1. Test the URI against all prefix strings.
# 2. The = (equals sign) modifier defines an exact match of the URI and a prefix string. If the exact match is found, the search stops.
# 3. Store the longest matching prefix string.
# 4. Stop processing when the first matching regular expression is found and use the corresponding location.
# 5. If no regular expression matches, use the location corresponding to the stored prefix string.

# location /images/ { root /data; }
# Means "/images/" must be /data/image

# SUSPICIOUS
# location /old/path.html { error_page 404 =301 http:/example.com/new/path.html; }
# if 404 occured do "301 https:/example.com/new/path.html"

server {
	# listen address[:port] [default_server]
	# listen port [default_server]
	# Default: listen *:80 | *:8000;
	#
	# If only address is given, the port 80 is used.
	# If the directive is not present then either *:80 is used if nginx runs with the superuser privileges, or *:8000 otherwise.
	# The default_server parameter, if present, will cause the server to become the default server for the specified address:port pair. If none of the directives have the default_server parameter then the first server with the address:port pair will be the default server for this pair.
	listen 127.0.0.1 default_server;
	listen 127.0.0.1:8000;
	listen 127.0.0.1;
	listen 8000;
	listen *:8000;
	listen localhost:8000;
	#
	# Syntax: root path;
	# Default: root html;
	# Context:	server, location
	root webserver
	# Syntax: server_name name ...;
	# Default: server_name "";
	# Context: server
	# If requests without the “Host” header field should not be allowed
	# If the server name is not found, the request will be processed by the default server.
	# The first name becomes the primary server name. 
	server_name example.com *.example.com www.example.* .example.com "";
	# location [ = ] uri { ... }
	# location blocks can be nested, with some exceptions mentioned below.
	# location = / matches only the exact path "/".
	# location / matches any path that starts with "/" (i.e., it's a prefix match).
	location /api {
		root /api
		# Possible multiple occurrence of paramaters in both server and location contexts
		# client_max_body_size, autoindex, index, cgi_extension, upload, root, error_page, return

		# https://docs.nginx.com/nginx-management-suite/acm/how-to/policies/cors/
		allowMethods GET POST DELETE;
		# The first parameter of "return" is a response code.
		# The optional second parameter can be the URL of a redirect (for codes 301, 302, 303, and 307)
		# or the text to return in the response body.
		return /old-url /new-url;
		# alias replaces "/api" with "/var/www/html"
		alias /var/www/html;
		# If a request ends with a slash, NGINX treats it as a request for a directory
		# and tries to find an index file in the directory.
		# The index directive defines the index file’s name (the default value is index.html).
		# To continue with the example, if the request URI is /images/some/path/,
		# NGINX delivers the file /www/data/images/some/path/index.html if it exists.
		# If it does not, NGINX returns HTTP code 404 (Not Found) by default.
		# To configure NGINX to return an automatically generated directory listing instead,
		# include "the autoindex on"
		autoindex on;
		# You can list more than one filename in the index directive.
		# NGINX searches for files in the specified order and returns the first one it finds.
		# index index.htm index.html;
		index index.html;
		# Sets the maximum allowed size of the client request body. if exceeds throw 413
		client_max_body_size 5m;

		# NOT STUDIED YET
		# deny  all;
		# allow 192.168.1.0/32;
		# cgi_extension .php .py;
		# cgi_pass ./cgi-bin;
		# cgi_processing on;
	}
}

# Part I don't get and/or couldn't find sth about
# # CGI thingies
# fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;
# fastcgi_pass  localhost:9000;
# # CGI Paths
# php_cgi_path /usr/bin/php-cgi;
# python_cgi_path /usr/bin/python-cgi;
# # Additional Settings
# cgi_environment_variable SCRIPT_NAME /cgi-bin/script.cgi;
